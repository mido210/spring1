1. 라이브러리/프레임워크의 차이
-  라이브러리는 기능의 집합 -> 개발자가 능동적으로 기능을 찾아서 씀
-  프레임워크 = 기능의 집합 + 사용법
   개발자가 작성한 코드를 사용법에 따라 프레임워크에 위탁해서 실행
   제어의 역전(Inversion of control) : 개발자가 아닌 프레임워크가 코드 흐름을 주도
                                     개발자의 코드는 수동적으로 실행

2. 스프링을 왜 사용하나?
- Inversion of Control(IoC. 제어 역전) : 프레임워크가 코드 흐름을 주도
- Aspect Oriented Programming(AOP) : 횡단관심을 처리
    횡단 관심 : 여기 저기 반복적으로 나타나는 기능. 예) 로그인
    횡단관심을 분리 구현 -> 필요한 곳에 주입해서 사용할 수 있게 한다
    예) 로그인 기능을 1번만 만들고 로그이니 확인이 필요한 메소드에  @secured() 어노테이션을 걸면
        스프링이 로그인여부를 확인 후 비로그인이면 로그인 페이지로 보내버린다

3. 초보자가 처음 스프링사용할 때 주의할 점
- 프로젝트를 생성할 때 패키지를 지정하면 스프링 기능 그 하위 패키지에 대해서만 동작
  예)com.example.demo.controller인 경우
     com.example.demo.controller에서는 @Controller와 같은 스프링 어노테이션이 동작
     com.example.demo1.controller에서는 스프링 어노테이션이 동작하지 않느다
- 패키지가 다르더라도 클래스 이름은 겹치면 안된다
  예) com.example.demo.controller1 밑에 SampleController가 있다면
      com.example.demo.controller2에도 SampleController가 있으면 안된다